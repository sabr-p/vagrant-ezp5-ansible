# Provisioning instructions for PHP, PHP extensions and
# related utilities

# configure PHP extensions and related components:
- name: PHP | Install dependencies
  yum: pkg=${item} state=present
  with_items: 
    # Essentials for building pecl extensions:
    - gcc
    - gcc-c++
    - autoconf
    - automake
    - pcre-devel

    # Useful/required php extensions:
    - php-gd
    - php-pecl-apc
    - php-process
    - php-mysql
    - php-pear

    # Symfony2 / eZ Publish 5 requirements:
    - php-xml
    - php-mbstring
    - ImageMagick
    - ImageMagick-devel
    - ImageMagick-perl

    # eZ Find:
    - java-1.6.0-openjdk.x86_64
  tags: [packages, php_packages]

- name: PHP | Update PEAR channels
  command: pear update-channels

# Use PECL to install php extensions:
# NOTE: there is currently no pecl module for ansible, so the
# check for idempotence isn't ideal. This can easily be fixed
# by using a custom module and pecl-list (to ensure presence,
# and version consistency)
- name: PHP | Install extensions (PECL)
  # this is horrible, but works as a temporary workaround for pecl-install's
  # unskippable prompts for some extensions, like imagick and apc
  # a module can be developed to interface with pecl, for more reliable
  # module installation.
  shell: printf "\n\n\n\n\n\n\n\n\n\n\n\n\n" | sudo pecl install ${item} creates=/usr/lib64/php/modules/${item}.so
  with_items:
    - xdebug
    - imagick
    - apc
  tags: [php_packages]

# Enable zend extensions
- name: PHP | Enable Zend Extensions (zend_extension)
  shell: echo zend_extension=/usr/lib64/php/modules/${item}.so | sudo tee /etc/php.d/${item}.ini
         creates=/etc/php.d/${item}.ini
  with_items: [xdebug]
  tags: [php_config]

# Enable extensions
- name: PHP | Enable extensions (extension)
  shell: echo extension=/usr/lib64/php/modules/${item}.so | sudo tee /etc/php.d/${item}.ini
         creates=/etc/php.d/${item}.ini
  with_items: [imagick, apc]
  tags: [php_config]

# Set additional PHP settings through a custom .ini template:
- name: PHP | Generate custom settings INI file
  template: src=templates/php_custom.ini.j2 dest=/etc/php.d/config_custom.ini
  notify:
    - restart httpd

# Download the latest version of composer, and place it somewhere in the $PATH
- name: PHP | Download Composer (/usr/local/bin/composer)
  get_url: url=http://getcomposer.org/composer.phar dest=/usr/local/bin/composer.phar
- file: path=/usr/local/bin/composer.phar mode=0777
- file: path=/usr/local/bin/composer src=/usr/local/bin/composer.phar state=link